Exatamente! âœ…

Tanto `push` quanto `unshift` **adicionam um novo item no array**, mas a **diferenÃ§a estÃ¡ na posiÃ§Ã£o** em que o item entra:

---

### ðŸŸ© `push(newItem)`

* **Adiciona no final** do array.
* Exemplo:

  ```ts
  const arr = [1, 2, 3]
  arr.push(4)
  console.log(arr) // [1, 2, 3, 4]
  ```

---

### ðŸŸ¦ `unshift(newItem)`

* **Adiciona no inÃ­cio** do array.
* Exemplo:

  ```ts
  const arr = [1, 2, 3]
  arr.unshift(0)
  console.log(arr) // [0, 1, 2, 3]
  ```

---

### ðŸ§  Ambos:

* SÃ£o **reativos no Vue** (ou `useStorage` com `ref`).
* SÃ£o **eficientes**, pois modificam o array original (sem recriar um novo).

---

### âœ… Quando usar cada um?

| Deseja que o item mais recente apareÃ§a... | Use...      |
| ----------------------------------------- | ----------- |
| No topo da lista (primeiro)               | `unshift()` |
| No final da lista (Ãºltimo)                | `push()`    |

---

Se estiver exibindo os itens com `v-for`, o comportamento visual muda com base em qual deles vocÃª usou, mesmo que a lÃ³gica interna seja igual.

Se quiser, posso sugerir uma visualizaÃ§Ã£o prÃ¡tica disso no seu template.
